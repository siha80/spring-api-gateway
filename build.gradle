plugins {
	id 'org.springframework.boot' version "2.4.2"
	id "io.spring.dependency-management" version "1.0.11.RELEASE"

	id 'java'

	id "com.palantir.docker" version "0.25.0"
	id "com.palantir.docker-run" version "0.25.0"
}

group = "com.hli.api.gw"
version = "0.0.1-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_11
String springCloudVersion = "2020.0.0"

repositories {
	mavenCentral()
	maven { url = uri("https://repo.spring.io/milestone") }
}

springBoot {
	mainClass = 'com.hli.api.gw.apigateway.ApiGatewayApplication'
}

String imageName = "siha80/spring-api-gateway-docker:$version"
docker {
	name imageName
	files "build/libs/${bootJar.archiveFileName.get()}"
	buildArgs([JAR_FILE: bootJar.archiveFileName.get()])
}

dockerRun {
	name project.name
	image imageName
	ports '8080:8080'
	clean true
}

dependencies {
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

	implementation("org.springframework.cloud:spring-cloud-starter-gateway")
	implementation("org.springframework.cloud:spring-cloud-starter-sleuth")

	compileOnly("org.projectlombok:lombok")
	annotationProcessor("org.projectlombok:lombok")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
}

dependencyManagement {
	imports {
		mavenBom("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
	}
}

test {
	useJUnitPlatform()
}
